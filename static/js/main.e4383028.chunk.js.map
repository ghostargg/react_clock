{"version":3,"sources":["componenrts/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeNow","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAC3BM,QAAQC,KAAM,EAAKT,MAAMC,MAAOS,cAAcC,OAAO,IAAK,MACzD,OAXP,gCAcE,SACEC,GAEA,IAAQC,EAAcT,KAAKU,MAAnBD,UAEJD,EAAUC,YAAcA,GAC1BL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MApB9D,kCAwBE,WACEG,cAAcZ,KAAKD,WAzBvB,oBA4BE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAzC3C,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNa,UAAW,UACXY,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBtB,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWO,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEkB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEkB,UAAU,SApBhC,kCAwBE,WACErB,KAAKG,SAAS,CAAEkB,UAAU,MAzB9B,oBA4BE,WACE,MAAgCrB,KAAKJ,MAA7Ba,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAlCvC,GAAyBK,IAAMC,WCb/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.e4383028.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ninterface ClockState {\n  today: Date;\n}\n\ninterface ClockProps {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state = {\n    today: new Date(),\n  };\n\n  timeNow = 0;\n\n  componentDidMount() {\n    this.timeNow = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      console.info((this.state.today).toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<ClockProps>,\n  ) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeNow);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './componenrts/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({ hasClock: false });\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}